"""Initial migration

Revision ID: f4cc73e9f4e4
Revises: 8291c7854385
Create Date: 2025-05-02 15:34:25.294427

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'f4cc73e9f4e4'
down_revision: Union[str, None] = '8291c7854385'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('persons_store_id_fkey', 'persons', type_='foreignkey')
    op.drop_column('persons', 'store_id')
    op.drop_constraint('plan_schedules_store_shift_id_fkey', 'plan_schedules', type_='foreignkey')
    op.drop_column('plan_schedules', 'store_shift_id')
    op.add_column('plan_work_times', sa.Column('store_shift_id', sa.UUID(), nullable=False))
    op.create_foreign_key(None, 'plan_work_times', 'store_shifts', ['store_shift_id'], ['id'])
    op.add_column('realogram_snapshots', sa.Column('planogram_id', sa.UUID(), nullable=True))
    op.create_foreign_key(None, 'realogram_snapshots', 'planograms', ['planogram_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'realogram_snapshots', type_='foreignkey')
    op.drop_column('realogram_snapshots', 'planogram_id')
    op.drop_constraint(None, 'plan_work_times', type_='foreignkey')
    op.drop_column('plan_work_times', 'store_shift_id')
    op.add_column('plan_schedules', sa.Column('store_shift_id', sa.UUID(), autoincrement=False, nullable=False))
    op.create_foreign_key('plan_schedules_store_shift_id_fkey', 'plan_schedules', 'store_shifts', ['store_shift_id'], ['id'])
    op.add_column('persons', sa.Column('store_id', sa.UUID(), autoincrement=False, nullable=True))
    op.create_foreign_key('persons_store_id_fkey', 'persons', 'stores', ['store_id'], ['id'])
    # ### end Alembic commands ###
