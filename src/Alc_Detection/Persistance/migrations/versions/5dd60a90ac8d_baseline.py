"""Baseline

Revision ID: 5dd60a90ac8d
Revises: 
Create Date: 2025-06-02 18:26:09.105055

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '5dd60a90ac8d'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute(
        "CREATE SEQUENCE IF NOT EXISTS products_label_seq START WITH 1 INCREMENT BY 1;"
    )
    op.add_column('products', sa.Column('label', sa.Integer(), server_default=sa.text("nextval('products_label_seq')"), nullable=False))
    op.create_unique_constraint(None, 'products', ['label'])
    op.add_column('stores', sa.Column('login', sa.String(), nullable=False))
    op.add_column('stores', sa.Column('password_hash', sa.String(length=128), nullable=True))
    op.create_unique_constraint(None, 'stores', ['login'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'stores', type_='unique')
    op.drop_column('stores', 'password_hash')
    op.drop_column('stores', 'login')
    op.drop_constraint(None, 'products', type_='unique')
    op.drop_column('products', 'label')
    # ### end Alembic commands ###
